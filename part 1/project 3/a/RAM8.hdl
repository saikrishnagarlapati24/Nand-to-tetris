// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux8Way(in=load,sel=address,a=rg1,b=rg2,c=rg3,d=rg4,e=rg5,f=rg6,g=rg7,h=rg8);

Register(in=in,load=rg1,out=ro1);
Register(in=in,load=rg2,out=ro2);
Register(in=in,load=rg3,out=ro3);
Register(in=in,load=rg4,out=ro4);
Register(in=in,load=rg5,out=ro5);
Register(in=in,load=rg6,out=ro6);
Register(in=in,load=rg7,out=ro7);
Register(in=in,load=rg8,out=ro8);

Mux8Way16(a=ro1 ,b=ro2 ,c=ro3 ,d=ro4 ,e=ro5 ,f=ro6 ,g=ro7 ,h=ro8 ,sel=address ,out=out );
}