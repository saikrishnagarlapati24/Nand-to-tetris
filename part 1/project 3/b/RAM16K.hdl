// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux4Way(in=load ,sel=address[12..13] ,a=R4k1 ,b=R4k2 ,c=R4k3 ,d=R4k4 );

RAM4K(in=in ,load=R4k1 ,address=address[0..11] ,out=Or4k1 );
RAM4K(in=in ,load=R4k2 ,address=address[0..11] ,out=Or4k2 );
RAM4K(in=in ,load=R4k3 ,address=address[0..11] ,out=Or4k3 );
RAM4K(in=in ,load=R4k4 ,address=address[0..11] ,out=Or4k4 );

Mux4Way16(a=Or4k1 ,b=Or4k2 ,c=Or4k3 ,d=Or4k4 ,sel=address[12..13] ,out=out );
}